(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{450:function(t,e,a){"use strict";a.r(e);var s=a(65),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"heart-rate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#heart-rate"}},[t._v("#")]),t._v(" Heart Rate")]),t._v(" "),a("h2",{attrs:{id:"sets-heart-rate-listener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sets-heart-rate-listener"}},[t._v("#")]),t._v(" Sets heart rate listener")]),t._v(" "),a("p",[t._v("All heart rate related data will pass the _blePlugin.heartRateEveStm.listen callback.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("heartRateEveStm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartRateBean")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Do something with new state,for example:")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartRateType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("measuring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                _measuring "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("measuring"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartRateType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onceMeasureComplete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                _onceMeasureComplete "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onceMeasureComplete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartRateType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bloodOxygen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                _historyHrList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("historyHrList"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartRateType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("measureComplete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                _measureComplete "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("measureComplete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartRateType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hourMeasureResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                _hour24MeasureResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hour24MeasureResult"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartRateType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("measureResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                _trainingList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trainingList"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Callback Description:")]),t._v(" "),a("p",[t._v("HeartRateBean：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("callback value")]),t._v(" "),a("th",[t._v("callback value type")]),t._v(" "),a("th",[t._v("callback  value description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("Get the corresponding return value according to type, where type is the value corresponding to HeartRateType")])]),t._v(" "),a("tr",[a("td",[t._v("measuring")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("The last dynamic heart rate measurement result")])]),t._v(" "),a("tr",[a("td",[t._v("onceMeasureComplete")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("Take a heart rate measurement")])]),t._v(" "),a("tr",[a("td",[t._v("historyHrList")]),t._v(" "),a("td",[t._v("List< HistoryHeartRateBean >")]),t._v(" "),a("td",[t._v("Historical heart rate data")])]),t._v(" "),a("tr",[a("td",[t._v("measureComplete")]),t._v(" "),a("td",[t._v("MeasureCompleteBean")]),t._v(" "),a("td",[t._v("Heart rate data")])]),t._v(" "),a("tr",[a("td",[t._v("hour24MeasureResult")]),t._v(" "),a("td",[t._v("HeartRateInfo")]),t._v(" "),a("td",[t._v("Heart rate measurement data for today or the previous day")])]),t._v(" "),a("tr",[a("td",[t._v("trainingList")]),t._v(" "),a("td",[t._v("List< TrainingHeartRateBean >")]),t._v(" "),a("td",[t._v("Dynamic heart rate data")])])])]),t._v(" "),a("p",[t._v("HistoryHeartRateBean：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("callback value")]),t._v(" "),a("th",[t._v("callback value type")]),t._v(" "),a("th",[t._v("callback  value description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("date")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("date")])]),t._v(" "),a("tr",[a("td",[t._v("hr")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("heart rate")])])])]),t._v(" "),a("p",[t._v("MeasureCompleteBean:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("callback value")]),t._v(" "),a("th",[t._v("callback value type")]),t._v(" "),a("th",[t._v("callback  value description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("historyDynamicRateType")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Heart rate type, exercise heart rate")])]),t._v(" "),a("tr",[a("td",[t._v("heartRate")]),t._v(" "),a("td",[t._v("HeartRateInfo")]),t._v(" "),a("td",[t._v("heart rate")])])])]),t._v(" "),a("p",[t._v("HeartRateInfo:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("callback value")]),t._v(" "),a("th",[t._v("callback value type")]),t._v(" "),a("th",[t._v("callback  value description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("startTime")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("start measure heart rate time")])]),t._v(" "),a("tr",[a("td",[t._v("heartRateList")]),t._v(" "),a("td",[t._v("List< int >")]),t._v(" "),a("td",[t._v("heart rate list")])]),t._v(" "),a("tr",[a("td",[t._v("timeInterval")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("Heart rate measurement interval")])]),t._v(" "),a("tr",[a("td",[t._v("heartRateType")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Heart rate measurement type")])])])]),t._v(" "),a("p",[t._v("TrainingHeartRateBean：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("type")]),t._v(" "),a("th",[t._v("startTime")]),t._v(" "),a("th",[t._v("endTime")]),t._v(" "),a("th",[t._v("validTime")]),t._v(" "),a("th",[t._v("steps")]),t._v(" "),a("th",[t._v("distance")]),t._v(" "),a("th",[t._v("calories")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("SportModeType")]),t._v(" "),a("td",[t._v("Start time (unit: milliseconds)")]),t._v(" "),a("td",[t._v("End time (unit: milliseconds)")]),t._v(" "),a("td",[t._v("Effective duration of exercise(unit: second)")]),t._v(" "),a("td",[t._v("Number of steps (partial motion mode is")]),t._v(" "),a("td",[t._v("Active distance (partial motion mode is not supported)")]),t._v(" "),a("td",[t._v("Calories")])])])]),t._v(" "),a("p",[t._v("SportModeType：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("callback value")]),t._v(" "),a("th",[t._v("callback value type")]),t._v(" "),a("th",[t._v("callback  value description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("walkType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("Walking")])]),t._v(" "),a("tr",[a("td",[t._v("runType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("Run")])]),t._v(" "),a("tr",[a("td",[t._v("outdoorCyclingType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("outdoor cycling")])]),t._v(" "),a("tr",[a("td",[t._v("ropeType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("rope")])]),t._v(" "),a("tr",[a("td",[t._v("badmintonType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("badminton")])]),t._v(" "),a("tr",[a("td",[t._v("basketballType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("basketball")])]),t._v(" "),a("tr",[a("td",[t._v("footballType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("football")])]),t._v(" "),a("tr",[a("td",[t._v("swimType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("swim")])]),t._v(" "),a("tr",[a("td",[t._v("mountaineeringType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("mountaineering")])]),t._v(" "),a("tr",[a("td",[t._v("tennisType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("tennis")])]),t._v(" "),a("tr",[a("td",[t._v("rugbyType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("rugby")])]),t._v(" "),a("tr",[a("td",[t._v("golfType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("golf")])]),t._v(" "),a("tr",[a("td",[t._v("yogaType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("yoga")])]),t._v(" "),a("tr",[a("td",[t._v("workoutType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("workout")])]),t._v(" "),a("tr",[a("td",[t._v("danceType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("dance")])]),t._v(" "),a("tr",[a("td",[t._v("baseballType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("baseball")])]),t._v(" "),a("tr",[a("td",[t._v("ellipticalType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("elliptical")])]),t._v(" "),a("tr",[a("td",[t._v("indoorCyclingType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("indoor cycling")])]),t._v(" "),a("tr",[a("td",[t._v("freeTrainingType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("free training")])]),t._v(" "),a("tr",[a("td",[t._v("boatingType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("boating")])]),t._v(" "),a("tr",[a("td",[t._v("trailRunningType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("trail running")])]),t._v(" "),a("tr",[a("td",[t._v("skiType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("ski")])]),t._v(" "),a("tr",[a("td",[t._v("bowlingType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("bowling")])]),t._v(" "),a("tr",[a("td",[t._v("dumbbellsType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("dumbbells")])]),t._v(" "),a("tr",[a("td",[t._v("sitUpsType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("sit ups")])]),t._v(" "),a("tr",[a("td",[t._v("onFootType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("on foot")])]),t._v(" "),a("tr",[a("td",[t._v("indoorWalkType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("indoor walk")])]),t._v(" "),a("tr",[a("td",[t._v("indoorRunType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("indoor run")])]),t._v(" "),a("tr",[a("td",[t._v("cricketType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("cricket")])]),t._v(" "),a("tr",[a("td",[t._v("kabAddiType")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("kabAddi")])])])]),t._v(" "),a("p",[t._v("HeartRateType:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("type")]),t._v(" "),a("th",[t._v("value")]),t._v(" "),a("th",[t._v("value description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("measuring")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("Gets the heart rate measurement")])]),t._v(" "),a("tr",[a("td",[t._v("onceMeasureComplete")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("Measuring once heart rate")])]),t._v(" "),a("tr",[a("td",[t._v("heartRate")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("Gets history once heart rate")])]),t._v(" "),a("tr",[a("td",[t._v("measureComplete")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("Data when heart rate measurement is completed")])]),t._v(" "),a("tr",[a("td",[t._v("hourMeasureResult")]),t._v(" "),a("td",[t._v("5")]),t._v(" "),a("td",[t._v("Gets heart rate measurement data")])]),t._v(" "),a("tr",[a("td",[t._v("measureResult")]),t._v(" "),a("td",[t._v("6")]),t._v(" "),a("td",[t._v("Gets Action data,Query the saved heart rate measurements in three sports modes")])])])]),t._v(" "),a("h2",{attrs:{id:"gets-last-action-heart-rate-measurement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gets-last-action-heart-rate-measurement"}},[t._v("#")]),t._v(" Gets last action heart rate measurement")]),t._v(" "),a("p",[t._v("The dynamic heart rate is measured in an unconnected state and the watch can save the last measurement.")]),t._v(" "),a("p",[t._v("Query the last measured heart rate record saved by the watch. The query result will be obtained through the heartRateEveStm listening stream and saved in the HeartRateBean.measuring field，type is measuring.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryLastDynamicRate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HistoryDynamicRateType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Parameter Description :")]),t._v(" "),a("p",[t._v("HistoryDynamicRateType:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("value")]),t._v(" "),a("th",[t._v("value type")]),t._v(" "),a("th",[t._v("value description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("firstHeartRate")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("first")])]),t._v(" "),a("tr",[a("td",[t._v("secondHeartRate")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("second")])]),t._v(" "),a("tr",[a("td",[t._v("thirdHeartRate")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("third")])])])]),t._v(" "),a("h2",{attrs:{id:"enable-timing-to-measure-heart-rate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enable-timing-to-measure-heart-rate"}},[t._v("#")]),t._v(" Enable timing to measure heart rate")]),t._v(" "),a("p",[t._v("The watch supports 24-hour timed measurement of heart rate, starting from 00:00, you can set the measurement interval, the time interval is a multiple of 5 minutes.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableTimingMeasureHeartRate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int interval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"disable-timing-to-measure-heart-rate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disable-timing-to-measure-heart-rate"}},[t._v("#")]),t._v(" Disable timing to measure heart rate")]),t._v(" "),a("p",[t._v("Turn off the timing to measure the heart rate.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("disableTimingMeasureHeartRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"gets-timing-to-measure-heart-rate-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gets-timing-to-measure-heart-rate-status"}},[t._v("#")]),t._v(" Gets timing to measure heart rate status")]),t._v(" "),a("p",[t._v("The query timing measures the heart rate on state.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("int timeHR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" _blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queryTimingMeasureHeartRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"gets-today-s-heart-rate-measurement-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gets-today-s-heart-rate-measurement-data"}},[t._v("#")]),t._v(" Gets today's heart rate measurement data")]),t._v(" "),a("p",[t._v("Today's heart rate measurement is divided into two types, which are obtained according to the measurement method supported by the corresponding watch.")]),t._v(" "),a("p",[t._v("Query today's measured heart rate value. The query result will be obtained through the heartRateEveStm listening stream and saved in the HeartRateBean.hour24MeasureResult field，type is hourMeasureResult.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryTodayHeartRate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TodayHeartRateType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("TodayHeartRateType：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("type")]),t._v(" "),a("th",[t._v("value")]),t._v(" "),a("th",[t._v("value description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("timingMeasureHeartRate")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("Timed heart rate measurement")])]),t._v(" "),a("tr",[a("td",[t._v("allDayHeartRate")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("24-hour continuous measurement")])])])]),t._v(" "),a("h2",{attrs:{id:"gets-historical-heart-rate-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gets-historical-heart-rate-data"}},[t._v("#")]),t._v(" Gets historical heart rate data")]),t._v(" "),a("p",[t._v("Query the heart rate data of the previous day. The query result will be obtained through the heartRateEveStm listening stream and saved in the HeartRateBean.hour24MeasureResult field，type is hourMeasureResult.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queryPastHeartRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"gets-action-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gets-action-data"}},[t._v("#")]),t._v(" Gets action data")]),t._v(" "),a("p",[t._v("Some watchs support heart rate measurement in a variety of motion modes. The measurements include other motion-related data such as heart rate and calories. This interface is used to obtain data such as calories. The watch can save the last three sports data. Supporting 24-hour continuous measurement of the watch, the exercise heart rate can be obtained from the 24-hour heart rate data according to the movement up time; other watch exercise heart rate and dynamic heart rate acquisition methods are consistent.")]),t._v(" "),a("p",[t._v("The query result will be obtained through the heartRateEveStm listening stream and saved in the HeartRateBean.trainingList field，type is measureResult.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queryTrainingHeartRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"measuring-once-heart-rate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#measuring-once-heart-rate"}},[t._v("#")]),t._v(" Measuring once heart rate")]),t._v(" "),a("p",[t._v("Start measuring a single heart rate, the query result will be obtained through the heartRateEveStm listening stream and saved in the HeartRateBean.measureComplete field，type is onceMeasureComplete.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startMeasureOnceHeartRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"stop-once-heart-rate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop-once-heart-rate"}},[t._v("#")]),t._v(" Stop once heart rate")]),t._v(" "),a("p",[t._v("End a once measurement. A measurement time that is too short will result in no measurement data.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stopMeasureOnceHeartRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"gets-history-once-heart-rate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gets-history-once-heart-rate"}},[t._v("#")]),t._v(" Gets history once heart rate")]),t._v(" "),a("p",[t._v("To query the historical heart rate, the query result will be obtained through the heartRateEveStm monitoring stream and saved in the HeartRateBean.historyHrList field,type is heartRate.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("_blePlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queryHistoryHeartRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);